@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-rgb: 0, 0, 0;
  --primary-rgb: 255, 255, 255;
  --secondary-rgb: 107, 114, 128;
  --font-family: var(--font-ppmori), system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  
  /* Apple-style spacing units */
  --spacing-xs: 0.5rem;    /* 8px */
  --spacing-sm: 0.75rem;   /* 12px */
  --spacing-md: 1rem;      /* 16px */
  --spacing-lg: 1.5rem;    /* 24px */
  --spacing-xl: 2rem;      /* 32px */
  --spacing-2xl: 3rem;     /* 48px */
  --spacing-3xl: 4rem;     /* 64px */
  
  /* Minimum touch target size */
  --min-touch-target: 44px;
  
  /* Typography scale */
  --text-xs: 0.875rem;     /* 14px - minimum size */
  --text-sm: 1rem;         /* 16px */
  --text-base: 1.125rem;   /* 18px */
  --text-lg: 1.25rem;      /* 20px */
  --text-xl: 1.5rem;       /* 24px */
  --text-2xl: 1.875rem;    /* 30px */
  --text-3xl: 2.25rem;     /* 36px */
  --text-4xl: 3rem;        /* 48px */
  --text-5xl: 3.75rem;     /* 60px */
}

/* Base styles */
html {
  height: 100%;
  background-color: rgb(var(--background-rgb));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;
}

body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  line-height: 1.5;
  letter-spacing: 0.015em;
  font-family: var(--font-family);
  overflow-x: hidden;
  width: 100%;
  max-width: 100vw;
}

main {
  flex: 1;
}

/* Typography scale following Apple's guidelines */
@layer base {
  h1 {
    @apply text-4xl sm:text-5xl lg:text-6xl font-bold tracking-tight mb-8 leading-tight;
    letter-spacing: -0.02em;
  }
  
  h2 {
    @apply text-2xl sm:text-3xl lg:text-4xl font-bold tracking-tight mb-6 leading-tight;
    letter-spacing: -0.015em;
  }
  
  h3 {
    @apply text-xl sm:text-2xl font-bold tracking-tight mb-4 leading-snug;
    letter-spacing: -0.01em;
  }
  
  p {
    @apply text-base sm:text-lg leading-relaxed text-gray-300;
    min-height: 1.5em;
  }

  /* Ensure all interactive elements meet minimum touch target size */
  a, button, input, select, textarea {
    @apply min-h-[44px] min-w-[44px];
  }

  /* Form elements with consistent styling */
  input, textarea {
    @apply mt-2 block w-full rounded-lg border-0 bg-white/5 px-4 py-3 text-white shadow-lg ring-1 ring-inset ring-white/10 
           focus:ring-2 focus:ring-inset focus:ring-white text-base leading-relaxed;
    min-height: var(--min-touch-target);
  }

  /* Button styles with proper touch targets and visual feedback */
  button {
    @apply rounded-lg px-6 py-3 text-base font-semibold shadow-lg transition-all duration-200
           focus:outline-none focus-visible:ring-1 focus-visible:ring-white/50
           disabled:opacity-50 disabled:cursor-not-allowed;
    min-height: var(--min-touch-target);
  }

  /* Link styles with proper touch targets */
  a {
    @apply transition-colors duration-200 hover:text-gray-300 focus:outline-none focus-visible:ring-1 focus-visible:ring-white/50;
  }
}

/* Card component styles */
.card {
  @apply rounded-2xl border border-white/10 p-8 backdrop-blur bg-white/5 
         transition-colors hover:bg-white/10 shadow-lg;
}

/* Container styles */
.container {
  @apply px-6 lg:px-8 mx-auto max-w-7xl;
}

/* Grid system */
.grid-responsive {
  @apply grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3;
}

/* Interactive element hover states */
.hover-effect {
  @apply transition-all duration-200 hover:scale-[1.02] hover:shadow-xl;
}

/* Focus styles for accessibility */
.focus-ring {
  @apply focus:outline-none focus-visible:ring-1 focus-visible:ring-white/50;
}

/* Animation durations */
.transition-standard {
  @apply transition-all duration-200;
}

/* Ensure proper contrast for text on various backgrounds */
.text-on-dark {
  @apply text-gray-300;
}

.text-on-light {
  @apply text-gray-900;
}

/* Proper spacing for stacked elements */
.stack > * + * {
  margin-top: var(--spacing-md);
}

/* Ensure images maintain aspect ratio */
.image-container {
  @apply relative overflow-hidden;
  aspect-ratio: attr(data-aspect-ratio);
} 